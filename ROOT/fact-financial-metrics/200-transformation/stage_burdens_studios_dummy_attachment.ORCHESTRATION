{"job":{"components":{"2005024":{"id":2005024,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":640,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005055],"outputSuccessConnectorIDs":[2005052],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rewrite stg3_burden_studios_dummy_attachment"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"  drop table if exists staging.stg3_burden_studios_dummy_attachment;\ncreate table           staging.stg3_burden_studios_dummy_attachment as\nselect\n     dummy.employee_person_id\n    ,de.employee_sk\n    ,dummy.approval_week_ending_sunday\n    ,dd.date_sk \t\t\t\t\t\tas approval_week_ending_sunday_sk\n    ,dss.source_system_name \t\t\tas source_system\n    ,dss.source_system_sk\t\t\t\tas source_system_sk\n    ,'studios_timeslip' \t\t\t\tas source_table\n    ,'1901-01-01'::date\t\t\t\t\tas working_week_ending_sunday\n    ,rdd.date_sk\t\t\t\t\t\tas working_week_ending_sunday_sk\n    ,nvl(dummy.project_id,0)\t\t\tas project_id\n    ,nvl(dummy.client_id,0)\t\t\t\tas client_id\n    ,dummy.timeslip_id\n    ,dummy.cost_apportionment\nfrom staging.stg2_burden_studios_dummy_attachment dummy\nleft join reporting.dim_source_system dss on dss.source_system_name = 'cloudwall'\nleft join reporting.dim_date dd on dd.calendar_date = dummy.approval_week_ending_sunday\nleft join reporting.dim_date rdd on rdd.calendar_date = '1901-01-01'::date\nleft join (\n  \tselect employee_sk,cloudwall_talent_id\n  \t\t,row_number() over(partition by cloudwall_talent_id order by effective_start_date desc,employment_status_id asc) as rown\n    from reporting.dim_employee\n    where current_record_ind = true\n) de on de.cloudwall_talent_id = dummy.employee_person_id and de.rown=1\norder by approval_week_ending_sunday;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005025":{"id":2005025,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":384,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005053],"outputSuccessConnectorIDs":[2005055],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rewrite stg2_burden_studios_dummy_attachment"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"  drop table if exists staging.stg2_burden_studios_dummy_attachment;\ncreate table           staging.stg2_burden_studios_dummy_attachment as\nwith timeslips\n    as( -- listagg timeslip_id to create distinct emp/awes/project/client record\n        select distinct\n              employee_person_id\n            , approval_week_ending_sunday\n            , project_id\n            , client_id\n            , listagg(distinct timeslip_id,',')\n                 within group (order by employee_person_id,approval_week_ending_sunday,project_id,client_id) as agg_timeslip_id\n            , sum(revenue_amount) as revenue_amount\n        from staging.stg2_robohead_studios_fact_financial_metrics_timeslips\n        group by employee_person_id, approval_week_ending_sunday, project_id, client_id\n        union all\n        select distinct\n             employee_person_id\n            ,approval_week_ending_sunday\n            ,null::int                      as project_id\n            ,null::int                      as client_id\n            ,timeslip_id::varchar           as agg_timeslip_id\n            ,0::numeric(38,4)               as revenue_amount\n        from staging.stg1_burden_studios_dummy_attachment\n    )\n, revenue_totals\n    as ( -- calculate total revenue for emp/awes\n        select distinct\n             employee_person_id\n            ,approval_week_ending_sunday\n            ,sum(revenue_amount) as total_revenue\n        from staging.stg2_robohead_studios_fact_financial_metrics_timeslips\n        group by employee_person_id, approval_week_ending_sunday\n        order by approval_week_ending_sunday\n    )\n,timeslips_weekly_order\n    as ( -- assign a rank based on emp to determine financial weekly order\n        select\n             *\n            ,dense_rank()over(partition by employee_person_id order by approval_week_ending_sunday) as timeslip_week_number\n            ,case\n                when project_id is null and client_id is null and agg_timeslip_id is null\n                    then null\n             else dense_rank()over(partition by employee_person_id order by approval_week_ending_sunday)\n             end as week_number_revision\n        from timeslips\n    )\n,timeslips_join\n    as (\n        select\n             *\n            ,last_value(week_number_revision ignore nulls)\n    \t     over (partition by employee_person_id order by approval_week_ending_sunday rows between unbounded preceding and current row)\n             as week_order_join\n        from timeslips_weekly_order\n    )\n\n, apportionment_ratio\n    as ( -- calculate the cost apportionment for cases that a talent is working multiple projects in previous week\n        select\n             ts.*\n            ,nvl(r.total_revenue,0) as total_revenue\n            ,case\n      \t\t \twhen r.total_revenue = 0\n      \t\t\t\tthen 1/(count(*)over(partition by ts.employee_person_id,ts.timeslip_week_number))::numeric(38,4)\n\t\t\t \telse nvl(ts.revenue_amount,0)/r.total_revenue\n      \t\t end as cost_apportionment\n        from timeslips_join ts\n        left join revenue_totals r\n            on ts.employee_person_id = r.employee_person_id\n            and ts.approval_week_ending_sunday = r.approval_week_ending_sunday\n        order by ts.approval_week_ending_sunday\n    )\n\nselect\n     ar.employee_person_id\n    ,ar.approval_week_ending_sunday\n    ,ar2.project_id\n    ,ar2.client_id\n    ,ar2.cost_apportionment::numeric(38,4)\n    ,-1::int as timeslip_id\nfrom apportionment_ratio ar\nleft join apportionment_ratio ar2\n    on ar.employee_person_id    = ar2.employee_person_id\n    and ar.week_order_join = ar2.timeslip_week_number\nwhere ar.project_id is null and ar.client_id is null\norder by ar.approval_week_ending_sunday;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005026":{"id":2005026,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":944,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005052],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert stg2_robohead_studios_fact_financial_metrics_timeslips"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into staging.stg2_robohead_studios_fact_financial_metrics_timeslips (\n     employee_person_id,employee_sk,approval_week_ending_sunday,approval_week_ending_sunday_sk,source_system_sk\n\t,source_system,source_table,project_id,client_id,timeslip_id,cost_apportionment,working_week_ending_sunday\n\t,working_week_ending_sunday_sk,cloudwall_fee_adjustment_id,order_sk,project_sk,client_sk,market_sk,currency_sk\n    ,account,fee_code_id,timecard_id,business_expense_id,order_id,timesheet_id,market_id,currency_id,exchange_rate_id\n)\nselect\n\t  employee_person_id\n\t, employee_sk\n\t, approval_week_ending_sunday\n\t, approval_week_ending_sunday_sk\n  \t, source_system_sk\n    , source_system\n    , source_table\n    , project_id\n    , client_id\n    , timeslip_id\n    , cost_apportionment\n    , working_week_ending_sunday\n    , working_week_ending_sunday_sk\n    , -1::int as cloudwall_fee_adjustment_id\n    , -1::int as order_sk\n    , -1::int as project_sk\n    , -1::int as client_sk\n    , -1::int as market_sk\n    , -1::int as currency_sk\n    , 0000000::varchar(7) as account\n    , 0::int as fee_code_id\n    , 0::int as timecard_id\n    , 0::int as business_expense_id\n    , 0::int as order_id\n    , 0::int as timesheet_id\n    , 0::int as market_id\n    , 0::int as currency_id\n    , 0::int as exchange_rate_id\nfrom staging.stg3_burden_studios_dummy_attachment\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005027":{"id":2005027,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-128,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2005051],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005028":{"id":2005028,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005051],"outputSuccessConnectorIDs":[2005054],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set jv_burden_cols"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select listagg(distinct burden_calculation,',') within group (order by burden_calculation)\nfrom staging.stg1_burden_mapping\nwhere burden_calculation <> 'N/A'"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jv_burden_cols"},"2":{"slot":2,"type":"STRING","value":"listagg"}}}},"visible":true},"5":{"slot":5,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005029":{"id":2005029,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":128,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005054],"outputSuccessConnectorIDs":[2005053],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rewrite stg1_burden_studios_dummy_attachment"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"  drop table if exists staging.stg1_burden_studios_dummy_attachment;\ncreate table\t\t   staging.stg1_burden_studios_dummy_attachment as\n\nwith\n df as ( --get all actual cost types from dayforce to be apportioned\n    select\n         employee_person_id,approval_week_ending_sunday,burden_calculation\n    from staging.stg1_burden_fact_financial_metrics\n    UNPIVOT (amt for burden_calculation in\n             (${jv_burden_cols})\n            ) upv\n    group by employee_person_id,approval_week_ending_sunday,burden_calculation\n    having sum(amt) <> 0\n)\n\n,app as ( --get all attachment points from staged source system data actual costs will be apportioned across\n    select distinct\n  \t\temployee_person_id,approval_week_ending_sunday,timeslip_id,project_fee_history_id,client_fee_history_id\n  \tfrom staging.stg1_burden_apportion\n)\n\n,rh_talent as ( --identify all studios talent by approval_week_ending_sunday\n\tselect distinct\n\t\t  be.person_id employee_person_id\n\t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'studios' talent_type\n\tfrom exploration.raw_cloudwall_business_expense be\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on be.adp_batch_id = adp.adp_batch_id\n\twhere (coalesce(home_division_id,0) in (30,40) or is_robohead_business_expense = true)\n\tunion\n\tselect distinct\n\t      jtc1.emp_person_id employee_person_id\n\t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'studios' talent_type\n\tfrom exploration.raw_cloudwall_job_time_card1 jtc1\n\t    left join exploration.raw_cloudwall_job_time_card3 jtc3\n\t        on jtc1.time_card_id = jtc3.time_card_id\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on jtc3.adp_batch_id = adp.adp_batch_id\n\t    left join exploration.raw_cloudwall_timeslip ts\n\t        on ts.time_card_id = jtc1.time_card_id\n\twhere (coalesce(jtc3.home_division_id,0) in (30,40) or ts.timeslip_id is not null)\n)\n\n,cw_talent as ( --identify all cloudwall talent by approval_week_ending_sunday\n\tselect distinct\n\t  \t  be.person_id employee_person_id\n\t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'cloudwall' talent_type\n\tfrom exploration.raw_cloudwall_business_expense be\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on be.adp_batch_id = adp.adp_batch_id\n\twhere not (coalesce(home_division_id,0) in (30,40) or is_robohead_business_expense = true)\n\tunion\n\tselect distinct\n\t      jtc1.emp_person_id employee_person_id\n  \t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'cloudwall' talent_type\n\tfrom exploration.raw_cloudwall_job_time_card1 jtc1\n\t    left join exploration.raw_cloudwall_job_time_card3 jtc3\n\t        on jtc1.time_card_id = jtc3.time_card_id\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on jtc3.adp_batch_id = adp.adp_batch_id\n\t    left join exploration.raw_cloudwall_timeslip ts\n\t        on ts.time_card_id = jtc1.time_card_id\n\twhere not (coalesce(jtc3.home_division_id,0) in (30,40) or ts.timeslip_id is not null)\n)\n\n,all_talent as ( -- full list of all employees by approval_week_ending_sunday and talent type\n    select * from rh_talent\n    union all\n    select * from cw_talent\n)\n\n,df_tt_attachment as ( -- identify whether a talent is staffing or studios for dayforce approval weeks\n    select distinct\n         coalesce(df.employee_person_id,at.employee_person_id) employee_person_id\n        ,coalesce(df.approval_week_ending_sunday,at.approval_week_ending_sunday) approval_week_ending_sunday\n        ,at.talent_type\n    from df\n        full join all_talent at\n    \t\ton  at.employee_person_id = df.employee_person_id\n    \t\tand at.approval_week_ending_sunday = df.approval_week_ending_sunday\n)\n\n,fill_missing_attachments as ( -- attach the previous talent type if none exists for an approval week\n    select\n         employee_person_id\n        ,approval_week_ending_sunday\n        ,case\n            when talent_type is null\n                then\n                     case\n                        when last_value(talent_type ignore nulls)over(partition by employee_person_id order by approval_week_ending_sunday rows between unbounded preceding and current row) is not null\n                            then last_value(talent_type ignore nulls)over(partition by employee_person_id order by approval_week_ending_sunday rows between unbounded preceding and current row)\n                        else last_value(talent_type ignore nulls)over(partition by employee_person_id order by approval_week_ending_sunday desc rows between unbounded preceding and current row)\n                     end\n         else talent_type\n         end as talent_type\n    from df_tt_attachment\n)\n\n,df_studios_talent as ( --attach talent type to dayforce actual costs\n                select\n                     df.*\n                from df\n                    join fill_missing_attachments fma\n  \t\t\t\t\t\ton  fma.employee_person_id = df.employee_person_id\n  \t\t\t\t\t\tand fma.approval_week_ending_sunday = df.approval_week_ending_sunday\n \t\t\t\t\t\tand fma.talent_type = 'studios'\n)\n\n,missing_attachments_rh as ( --identify actual costs types that do not have an attachment point in staged source system data for studios\n    select\n          dst.employee_person_id\n        , dst.approval_week_ending_sunday\n        , dst.burden_calculation\n        , app.timeslip_id\n        , app.project_fee_history_id\n        , app.client_fee_history_id\n        , case\n            when max(app.timeslip_id)            over (partition by dst.employee_person_id,dst.approval_week_ending_sunday,dst.burden_calculation) is null\n            or   max(app.project_fee_history_id) over (partition by dst.employee_person_id,dst.approval_week_ending_sunday,dst.burden_calculation) is null\n            or   max(app.client_fee_history_id)  over (partition by dst.employee_person_id,dst.approval_week_ending_sunday,dst.burden_calculation) is null\n                then false\n            else true\n          end as has_attachment\n    from df_studios_talent dst\n    left join app\n        on  app.employee_person_id          = dst.employee_person_id\n        and app.approval_week_ending_sunday = dst.approval_week_ending_sunday\n)\n\nselect\n    employee_person_id,approval_week_ending_sunday,timeslip_id\nfrom missing_attachments_rh\nwhere has_attachment is false\norder by approval_week_ending_sunday;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2005052":{"id":2005052,"sourceID":2005024,"targetID":2005026},"2005053":{"id":2005053,"sourceID":2005029,"targetID":2005025},"2005054":{"id":2005054,"sourceID":2005028,"targetID":2005029},"2005055":{"id":2005055,"sourceID":2005025,"targetID":2005024}},"failureConnectors":{},"unconditionalConnectors":{"2005051":{"id":2005051,"sourceID":2005027,"targetID":2005028}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2005030":{"id":2005030,"x":533,"y":-72,"width":229,"height":148,"text":"**build new dummy records**","colour":"e6e63c"},"2005031":{"id":2005031,"x":272,"y":-73,"width":226,"height":145,"text":"**grab the latest project_id & client_id for dummy record creation**","colour":"e6e63c"},"2005032":{"id":2005032,"x":798,"y":-74,"width":304,"height":142,"text":"**insert studios dummy records into stg**","colour":"e6e63c"},"2005033":{"id":2005033,"x":-63,"y":-72,"width":296,"height":143,"text":"identify emp/wes that need to be inserted to stg so all actual costs get attached to source system financial data","colour":"e6e63c"}},"variables":{"jv_burden_cols":{"definition":{"name":"jv_burden_cols","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""}},"grids":{}},"info":{"name":"stage_burdens_studios_dummy_attachment","description":"","type":"ORCHESTRATION","tag":"f0e34af6-9b7b-4f79-b7bb-b4e875ada0c1"}}