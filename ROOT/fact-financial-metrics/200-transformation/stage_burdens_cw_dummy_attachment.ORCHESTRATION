{"job":{"components":{"2004961":{"id":2004961,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":48,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005017],"outputSuccessConnectorIDs":[2005018],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"set jv_burden_cols"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select listagg(distinct burden_calculation,',') within group (order by burden_calculation)\nfrom staging.stg1_burden_mapping\nwhere burden_calculation <> 'N/A'"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"jv_burden_cols"},"2":{"slot":2,"type":"STRING","value":"listagg"}}}},"visible":true},"5":{"slot":5,"name":"Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005020":{"id":2005020,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":400,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005016],"outputSuccessConnectorIDs":[2005019],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rewrite stg2_burden_cw_dummy_attachment"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"  drop table if exists staging.stg2_burden_cw_dummy_attachment;\ncreate table           staging.stg2_burden_cw_dummy_attachment as\nselect\n     dummy.employee_person_id\n    ,de.employee_sk\n    ,dummy.approval_week_ending_sunday\n    ,dd.date_sk as approval_week_ending_sunday_sk\n    ,dummy.fee_code_id\n    ,dss.source_system_sk\n    ,dss.source_system_name as source_system\n    ,case when dummy.fee_code_id =  111 then 'job_time_card' else 'business_expense' end as source_table\n    ,case when dummy.fee_code_id =  111 then -1 end as timecard_id\n    ,case when dummy.fee_code_id <> 111 then -1 end as business_expense_id\nfrom staging.stg1_burden_cw_dummy_attachment dummy\nleft join reporting.dim_source_system dss on dss.source_system_name = 'cloudwall'\nleft join reporting.dim_date dd on dd.calendar_date = dummy.approval_week_ending_sunday\nleft join (\n  \tselect employee_sk,cloudwall_talent_id\n  \t\t,row_number() over(partition by cloudwall_talent_id order by effective_start_date desc,employment_status_id asc) as rown\n    from reporting.dim_employee\n    where current_record_ind = true\n) de on de.cloudwall_talent_id = dummy.employee_person_id and de.rown=1\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005021":{"id":2005021,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":656,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005019],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert stg1_cloudwall_fact_financial_metrics"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into staging.stg1_cloudwall_fact_financial_metrics (\n     employee_person_id,employee_sk,approval_week_ending_sunday,approval_week_ending_sunday_sk,fee_code_id\n  \t,source_system_sk,source_system,source_table\n    ,timecard_id,business_expense_id\n)\nselect\n     employee_person_id,employee_sk,approval_week_ending_sunday,approval_week_ending_sunday_sk,fee_code_id\n  \t,source_system_sk,source_system,source_table\n    ,timecard_id,business_expense_id\nfrom staging.stg2_burden_cw_dummy_attachment\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005022":{"id":2005022,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":176,"y":0,"width":32,"height":32,"inputConnectorIDs":[2005018],"outputSuccessConnectorIDs":[2005016],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"rewrite stg1_burden_cw_dummy_attachment"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"  drop table if exists staging.stg1_burden_cw_dummy_attachment;\ncreate table\t\t   staging.stg1_burden_cw_dummy_attachment as\n\nwith\n atts as ( --get manually maintained list of (actual cost <-> source system financial) attachment points\n    select\n         *\n    from staging.stg1_burden_mapping_attachments\n)\n\n,df as ( --get all actual cost types from dayforce to be apportioned\n    select\n         employee_person_id,approval_week_ending_sunday,burden_calculation\n    from staging.stg1_burden_fact_financial_metrics\n    UNPIVOT (amt for burden_calculation in\n             (${jv_burden_cols})\n            ) upv\n    group by employee_person_id,approval_week_ending_sunday,burden_calculation\n    having sum(amt) <> 0\n)\n\n,app as ( --get all attachment points from staged source system data actual costs will be apportioned across\n    select distinct\n  \t\temployee_person_id,approval_week_ending_sunday,fee_code_id\n  \tfrom staging.stg1_burden_apportion\n)\n\n,cw_talent as ( --identify all cloudwall talent by approval_week_ending_sunday\n\tselect distinct\n\t  \t  be.person_id employee_person_id\n\t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'cloudwall' talent_type\n\tfrom exploration.raw_cloudwall_business_expense be\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on be.adp_batch_id = adp.adp_batch_id\n\twhere not (coalesce(home_division_id,0) in (30,40) or is_robohead_business_expense = true)\n\tunion\n\tselect distinct\n\t      jtc1.emp_person_id employee_person_id\n  \t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'cloudwall' talent_type\n\tfrom exploration.raw_cloudwall_job_time_card1 jtc1\n\t    left join exploration.raw_cloudwall_job_time_card3 jtc3\n\t        on jtc1.time_card_id = jtc3.time_card_id\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on jtc3.adp_batch_id = adp.adp_batch_id\n\t    left join exploration.raw_cloudwall_timeslip ts\n\t        on ts.time_card_id = jtc1.time_card_id\n\twhere not (coalesce(jtc3.home_division_id,0) in (30,40) or ts.timeslip_id is not null)\n)\n\n,rh_talent as ( --identify all studios talent by approval_week_ending_sunday\n\tselect distinct\n\t\t  be.person_id employee_person_id\n\t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'studios' talent_type\n\tfrom exploration.raw_cloudwall_business_expense be\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on be.adp_batch_id = adp.adp_batch_id\n\twhere (coalesce(home_division_id,0) in (30,40) or is_robohead_business_expense = true)\n\tunion\n\tselect distinct\n\t      jtc1.emp_person_id employee_person_id\n\t\t, adp.week_ending_sunday approval_week_ending_sunday\n  \t\t, 'studios' talent_type\n\tfrom exploration.raw_cloudwall_job_time_card1 jtc1\n\t    left join exploration.raw_cloudwall_job_time_card3 jtc3\n\t        on jtc1.time_card_id = jtc3.time_card_id\n\t    left join exploration.raw_cloudwall_adp_batch adp\n\t        on jtc3.adp_batch_id = adp.adp_batch_id\n\t    left join exploration.raw_cloudwall_timeslip ts\n\t        on ts.time_card_id = jtc1.time_card_id\n\twhere (coalesce(jtc3.home_division_id,0) in (30,40) or ts.timeslip_id is not null)\n)\n\n,all_talent as ( -- full list of all employees by approval_week_ending_sunday and talent type\n    select * from rh_talent\n    union all\n    select * from cw_talent\n)\n\n,df_tt_attachment as ( -- identify whether a talent is staffing or studios for dayforce approval weeks\n    select distinct\n         coalesce(df.employee_person_id,at.employee_person_id) employee_person_id\n        ,coalesce(df.approval_week_ending_sunday,at.approval_week_ending_sunday) approval_week_ending_sunday\n        ,at.talent_type\n    from df\n        full join all_talent at\n    \t\ton  at.employee_person_id = df.employee_person_id\n    \t\tand at.approval_week_ending_sunday = df.approval_week_ending_sunday\n)\n\n,fill_missing_attachments as ( -- attach the previous talent type if none exists for an approval week\n    select\n         employee_person_id\n        ,approval_week_ending_sunday\n        ,case\n            when talent_type is null\n                then\n                     case\n                        when last_value(talent_type ignore nulls)over(partition by employee_person_id order by approval_week_ending_sunday rows between unbounded preceding and current row) is not null\n                            then last_value(talent_type ignore nulls)over(partition by employee_person_id order by approval_week_ending_sunday rows between unbounded preceding and current row)\n                        else last_value(talent_type ignore nulls)over(partition by employee_person_id order by approval_week_ending_sunday desc rows between unbounded preceding and current row)\n                     end\n         else talent_type\n         end as talent_type\n    from df_tt_attachment\n)\n\n,df_cw_talent as ( --attach talent type to dayforce actual costs\n                select\n                     df.*\n                from df\n                    join fill_missing_attachments fma\n  \t\t\t\t\t\ton  fma.employee_person_id = df.employee_person_id\n  \t\t\t\t\t\tand fma.approval_week_ending_sunday = df.approval_week_ending_sunday\n \t\t\t\t\t\tand fma.talent_type = 'cloudwall'\n)\n\n,missing_attachments_cw as ( --identify actual costs types that do not have an attachment point in staged source system data for cloudwall\n    select\n          dct.employee_person_id\n        , dct.approval_week_ending_sunday\n        , dct.burden_calculation\n        , atts.fee_code_id as fee_code_id_attachment\n        , app.fee_code_id as fee_code_id_apportioned\n        , case\n            when min(app.fee_code_id) over (partition by dct.employee_person_id,dct.approval_week_ending_sunday,dct.burden_calculation) is null\n                then false\n            else true\n          end as has_attachment\n    from df_cw_talent dct\n    left join atts\n        on atts.burden_calculation = dct.burden_calculation\n    left join app\n        on  app.employee_person_id          = dct.employee_person_id\n        and app.approval_week_ending_sunday = dct.approval_week_ending_sunday\n        and app.fee_code_id \t\t\t\t= atts.fee_code_id\n)\n\n,missing_attachments as ( --identify actual costs types that do not have an attachment point in staged source system data\n    select\n         employee_person_id,approval_week_ending_sunday,burden_calculation\n        ,min(fee_code_id_attachment)    as fee_code_id\n    from missing_attachments_cw\n    where has_attachment = false\n    group by employee_person_id,approval_week_ending_sunday,burden_calculation\n)\n\nselect distinct\n\temployee_person_id,approval_week_ending_sunday,fee_code_id\nfrom missing_attachments\norder by approval_week_ending_sunday\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"2005023":{"id":2005023,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-80,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[2005017],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"2005016":{"id":2005016,"sourceID":2005022,"targetID":2005020},"2005018":{"id":2005018,"sourceID":2004961,"targetID":2005022},"2005019":{"id":2005019,"sourceID":2005020,"targetID":2005021}},"failureConnectors":{},"unconditionalConnectors":{"2005017":{"id":2005017,"sourceID":2005023,"targetID":2004961}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"2004960":{"id":2004960,"x":528,"y":-74,"width":245,"height":146,"text":"**insert cw dummy records into stg**","colour":"e6e63c"},"2004962":{"id":2004962,"x":-19,"y":-76,"width":294,"height":150,"text":"identify emp/wes/fee_code_ids that need to be inserted to stg so all actual costs get attached to source system financial data","colour":"e6e63c"},"2004963":{"id":2004963,"x":287,"y":-73,"width":213,"height":146,"text":"**build new dummy records**","colour":"e6e63c"}},"variables":{"jv_burden_cols":{"definition":{"name":"jv_burden_cols","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PRIVATE"},"value":""}},"grids":{}},"info":{"name":"stage_burdens_cw_dummy_attachment","description":"","type":"ORCHESTRATION","tag":"74a1e263-dc34-4648-a741-3e10039cfe46"}}